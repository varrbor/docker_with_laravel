 server {
    listen 80 default_server;
    server_name app.loc;
    root /app/public;
    index index.php index.html;
    

    location / {
      
        try_files $uri $uri/ /index.php?$args;
    }
    
      
   # serve static files directly
   # location ~* ^.+\.(jpeg|jpg|png|gif|bmp|ico|svg|tif|tiff|css|js|htm|html|ttf|otf|webp|woff|txt|csv|rtf|doc|docx|xls|xlsx|ppt|pptx|odf|odp|ods|odt|pdf|psd|ai|eot|eps|ps|zip|tar|tgz|gz|rar|bz2|7z|aac|m4a|mp3|mp4|ogg|wav|wma|3gp|avi|flv|m4v|mkv|mov|mpeg|mpg|wmv|exe|iso|dmg|swf)$ {
   
   location ~* \.(jpg|jpeg|gif|bmp|svg|tif|tiff|css|png|ttf|otf|webp|woff|js|ico|html)$ {
        access_log off;
		expires max;
		log_not_found off;
                
   }
   
   # removes trailing slashes (prevents SEO duplicate content issues)
	if (!-d $request_filename)
	{
		rewrite ^/(.+)/$ /$1 permanent;
	}



    location ~ \.php$ {
    
        # Bypass the fact that try_files resets $fastcgi_path_info
		# see: http://trac.nginx.org/nginx/ticket/321
		set $path_info $fastcgi_path_info;
		fastcgi_param PATH_INFO $path_info;
       
        # regex to split $uri to $fastcgi_script_name and $fastcgi_path
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		                        
		# Check that the PHP script exists before passing it
		try_files $fastcgi_script_name =404;		

		fastcgi_index index.php;
		include fastcgi.conf;
        fastcgi_pass php-fpm:9070;
        fastcgi_read_timeout 300; 
    }

    location ~ /\.ht {
        deny all;
    }
}

